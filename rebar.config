%% -*- erlang -*-
{cover_enabled, true}.
{erl_opts, [debug_info, warnings_as_errors, {parse_transform, lager_transform}]}.
%% {erl_opts, [debug_info, {parse_transform, lager_transform}]}.
{edoc_opts, [{dir, "../../doc"}]}.
{eunit_opts, [{report,{eunit_surefire,[{dir,"."}]}}]}.

{deps,
 [
  %% Lets overwrite stuff that is not 18.0 compatible :(
  {edown,".*",     {git, "https://github.com/uwiger/edown.git",       {branch, "master"}}},
  %% the client libraries always use tagged versions we need the newest for development so.
  {lager, "2.1.1"},
  {fifo_lager, ".*", {git, "https://github.com/project-fifo/fifo_lager.git", {branch, "master"}}},
  {meck, "0.8.2", {git, "https://github.com/basho/meck.git", {tag, "0.8.2"}}},
  {clique, ".*", {git, "https://github.com/project-fifo/clique.git", {branch, "develop"}}},
  {erlcloud, ".*", {git, "https://github.com/project-fifo/erlcloud", {branch, "fifo"}}},
  {jsx, "1.4.5"},
  {riak_core, ".*", {git, "https://github.com/project-fifo/riak_core", {branch, "fifo-0.7.3-rocks"}}},
  %% We need this explictly since there will be tons of erros if a different
  %% poolboy is used.
  {poolboy, ".*", {git, "https://github.com/basho/poolboy.git", {tag, "0.8.1p3"}}},
  {fifo_db, ".*", {git, "https://github.com/project-fifo/fifo-db.git", {branch, "rocksdb"}}},
  {fifo_s3, ".*", {git, "https://github.com/project-fifo/fifo_s3.git", {branch, "master"}}},
  {fifo_dt, ".*", {git, "https://github.com/project-fifo/fifo_dt.git", {branch, "master"}}},
  {uuid, ".*", {git, "https://github.com/project-fifo/erlang-uuid.git", {branch, "master"}}},
  {hackney, ".*", {git, "https://github.com/benoitc/hackney.git", {tag, "0.6.1"}}},
  {eplugin, ".*", {git, "https://github.com/Licenser/eplugin.git", {branch, "master"}}},
  {sgte, ".*", {git, "https://github.com/project-fifo/sgte.git", {branch, "master"}}},
  {rankmatcher, ".*", {git, "https://github.com/Licenser/rankmatcher.git", {branch, "master"}}},
  {mdns_server_lib, ".*", {git, "https://github.com/Licenser/mdns_server_lib.git", {branch, "master"}}},
  jsxd,
  {fifo_spec, ".*", {git, "https://github.com/project-fifo/fifo_spec.git", {branch, "test"}}},
  {fifo_utils, ".*", {git, "https://github.com/project-fifo/fifo_utils.git", {branch, "master"}}},
  {libhowl, ".*", {git, "https://github.com/project-fifo/libhowl.git", {branch, "test"}}},
  {libchunter, ".*", {git, "https://github.com/project-fifo/libchunter.git", {branch, "test"}}},
  {libsnarl, ".*", {git, "https://github.com/project-fifo/libsnarl.git", {branch, "test"}}},
  {libleofs, ".*", {git, "https://github.com/project-fifo/libleofs.git", {branch, "master"}}},
  folsom_ddb,
  {bugsnag, ".*", {git, "https://github.com/project-fifo/bugsnag-erlang.git", {branch, "master"}}},
  eper,
  recon
 ]}.

{plugins, [pc]}.

{project_plugins, [{rebar3_cuttlefish, "0.8.0"}]}.

%% Cuttlefish config
{cuttlefish,
 [{file_name, "chunter.conf.example"},
  {schema_discovery, false}]}.


%% xref checks to run
{xref_checks, [undefined_function_calls, undefined_functions,
               locals_not_used, % exports_not_used, that is a problem with having multiple apps
               deprecated_function_calls, deprecated_functions]}.

{overrides,
  [
   {override, cluster_info,
    [{erl_opts, [{i,"./priv/"}, debug_info]}]}
 ]}.
{pre_hooks, [{compile, "make version_header"}]}.

{profiles,
 [
  {short, [{erl_opts, [{d, 'EQC_SHORT_TEST'}]}]},
  {long, [{erl_opts, [{d, 'EQC_LONG_TEST'}]}]},
  {prod, [{relx, [{dev_mode, false}]}]},
  {lint,
   [{plugins,
     [{rebar3_lint,
       {git, "https://github.com/project-fifo/rebar3_lint.git",
        {tag, "0.1.3"}}}]}]}
 ]}.


{relx,
 [{release, {sniffle, "0.7.3"},
   [
    sasl,
    sniffle_api,
    sniffle_console,
    sniffle_create,
    sniffle_watchdog,
    sniffle,
    {cuttlefish, load}, %% needed for riak core
    {recon, load},
    {rankmatcher, load},
    {bear, load}, % we need this since folsom doesn't include it
    {eper, load}
   ]},

  {dev_mode, true},
  {include_erts, true},
  {generate_start_script, false},
  {overlay_vars, "rel/vars.config"},
  {overlay,
   [{mkdir, "etc"},
    {copy, "rel/files/erl", "erts-\{\{erts_vsn\}\}/bin/erl"},
    {copy, "rel/files/nodetool", "erts-\{\{erts_vsn\}\}/bin/nodetool"},
    {template, "rel/files/fifo_complete.sh", "etc/fifo_complete.sh"},
    {template, "rel/files/sniffle", "bin/sniffle"},
    {template, "rel/files/sniffle-admin", "bin/sniffle-admin"},

    {copy, "share", "share"},
    {copy, "_build/default/lib/fifo_utils/priv/update_config.sh", "share/"},
    {template, "schema/sniffle.schema", "share/schema/00-sniffle.schema"},
    {template, "_build/default/lib/bugsnag/priv/bugsnag.schema", "share/schema/01-bugsnag.schema"},
    {template, "schema/erlang_vm.schema", "share/schema/02-vm.schema"},
    {template, "_build/default/lib/riak_core/priv/riak_core.schema", "share/schema/03-riak_core.schema"},
    {template, "_build/default/lib/fifo_lager/priv/lager.schema", "share/schema/04-lager.schema"},
    {template, "_build/default/lib/fifo_db/priv/fifo_db.schema", "share/schema/05-fifo_db.schema"},
    {template, "_build/default/lib/fifo_db/priv/eleveldb.schema", "share/schema/06-eleveldb.schema"},
    {template, "_build/default/lib/mdns_client_lib/priv/mdns_client.schema", "share/schema/07-mdns_client.schema"},
    {template, "_build/default/lib/mdns_server_lib/priv/mdns_server.schema", "share/schema/08-mdns_server.schema"},
    {template, "_build/default/lib/libsnarl/priv/libsnarl.schema", "share/schema/09-libsnarl.schema"},
    {template, "schema/riak_sysmon.schema", "share/schema/10-riak_sysmon.schema"},
    {template, "_build/default/lib/folsom_ddb/priv/folsom_ddb.schema", "share/schema/11-folsom_ddb.schema"},
    {template, "schema/snmp.schema", "share/schema/12-snmp.schema"},
    {copy, "apps/sniffle/mibs/SNIFFLE-MIB.mib", "share/SNIFFLE-MIB.mib"},
    {copy, "snmp", "snmp"}
   ]}]}.

%% Cuttlefish filename
{cuttlefish_filename, "sniffle.conf.example"}.

{dialyzer, []}.

{elvis,
 [#{dirs => ["apps/*/src"],
    filter => "*.erl",
    rules => [{elvis_style, line_length,
               #{ignore => [],
                 limit => 80,
                 skip_comments => false}},
              {elvis_style, no_tabs},
              {elvis_style, no_trailing_whitespace},
              {elvis_style, macro_names,
               #{ignore => [sniffle_snmp_handler]}},
              %% We disable this since it's used in the consoles a lot
              %% and makes sense there, I think...
              %% {elvis_style, macro_module_names},
              {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                         {right, "++"},
                                                         {left, "++"}]}},
              {elvis_style, nesting_level, #{level => 3}},
              {elvis_style, god_modules,
               #{limit => 25,
                 ignore => [sniffle_vm, sniffle_vm_vnode,
                            sniffle_network, sniffle_network_vnode,
                            sniffle_iprange, sniffle_iprange_vnode,
                            sniffle_hypervisor, sniffle_hypervisor_vnode,
                            sniffle_dataset, sniffle_dataset_vnode,
                            sniffle_package, sniffle_package_vnode]}},
              {elvis_style, no_if_expression},
              {elvis_style, invalid_dynamic_call,
               #{ignore => [%% We use VNode:OP to allow the read/write FSM
                            %% to handle any kind of command.
                            sniffle_entity_read_fsm,
                            sniffle_entity_write_fsm,
                            %% sniffle_vnode depends on calling functions on
                            %% ft_* types, we can't define them as
                            %% behaviour.
                            sniffle_vnode]}},
              {elvis_style, used_ignored_variable},
              {elvis_style, no_behavior_info},
              {
                elvis_style,
                module_naming_convention,
                #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$",
                  ignore => []}
              },
              {
                elvis_style,
                function_naming_convention,
                #{regex => "^([a-z][a-z0-9]*_?)+([a-z0-9]*_?)*$"}
              },
              {elvis_style, state_record_and_type},
              {elvis_style, no_spec_with_records},
              {elvis_style, dont_repeat_yourself, #{min_complexity => 12}},
              {elvis_style, no_debug_call,
               #{ignore => [
                            %% This is a console, we are doing IO there not
                            %% any debug output.
                            sniffle_console,
                            sniffle_ensemble_console,
                            sniffle_console_vms,
                            sniffle_console_packages,
                            sniffle_console_networks,
                            sniffle_console_ipranges,
                            sniffle_console_hypervisors,
                            sniffle_console_dtrace,
                            sniffle_console_datasets
                           ]}}
             ]
   },
  #{dirs => ["."],
    filter => "Makefile",
    rules => [{elvis_project, no_deps_master_erlang_mk, #{ignore => []}},
              {elvis_project, protocol_for_deps_erlang_mk, #{ignore => []}}]
   },
  #{dirs => ["."],
    filter => "rebar.config",
    %% on the test branch master deps are OK
    rules => [%{elvis_project, no_deps_master_rebar, #{ignore => []}},
              {elvis_project, protocol_for_deps_rebar, #{ignore => []}}]
   },
  #{dirs => ["."],
    filter => "elvis.config",
    rules => [{elvis_project, old_configuration_format}]
   }
 ]
}.
